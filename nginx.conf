# @fileoverview Nginx reverse proxy configuration for LegacyAI Voice Agent System
# @author LegacyAI Subagent Fleet - Deployment Agent
# @created 2025-10-01T19:00:00Z
# @lastModified 2025-10-01T19:00:00Z
#
# Production-ready Nginx configuration featuring:
# - Reverse proxy to Express server (port 3000)
# - WebSocket proxy support (port 3001)
# - SSL/TLS configuration (Let's Encrypt ready)
# - Security headers
# - Rate limiting
# - GZIP compression
# - Request logging
# - Static file serving

# Run Nginx as www-data user
user nginx;

# Number of worker processes (auto-detect CPU cores)
worker_processes auto;

# Error log location and level
error_log /var/log/nginx/error.log warn;

# PID file location
pid /var/run/nginx.pid;

# Events block - connection processing
events {
    # Maximum number of simultaneous connections per worker
    worker_connections 1024;

    # Use efficient connection processing method
    use epoll;

    # Accept multiple connections at once
    multi_accept on;
}

# HTTP block - main configuration
http {
    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    # Access log location
    access_log /var/log/nginx/access.log main;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Hide Nginx version in headers (security)
    server_tokens off;

    # GZIP compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript
               application/json application/javascript application/xml+rss
               application/rss+xml font/truetype font/opentype
               application/vnd.ms-fontobject image/svg+xml;
    gzip_disable "msie6";

    # Rate limiting zones
    # Limit requests to 100 per minute per IP for API endpoints
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/m;

    # Limit requests to 10 per minute per IP for webhooks
    limit_req_zone $binary_remote_addr zone=webhook_limit:10m rate=10r/m;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit:10m;

    # Upstream configuration for Node.js application
    upstream voice_app {
        # Express server running on port 3000
        server voice-app:3000 max_fails=3 fail_timeout=30s;

        # Keep-alive connections to upstream
        keepalive 32;
    }

    # Upstream configuration for WebSocket server
    upstream websocket_app {
        # WebSocket server running on port 3001
        server voice-app:3001 max_fails=3 fail_timeout=30s;
    }

    # HTTP server (redirect to HTTPS in production)
    server {
        listen 80;
        listen [::]:80;

        server_name _;

        # Allow health checks on HTTP
        location /health {
            proxy_pass http://voice_app/health;
            access_log off;
        }

        # Redirect all other HTTP traffic to HTTPS (uncomment in production)
        # location / {
        #     return 301 https://$host$request_uri;
        # }

        # For development, proxy to app directly
        location / {
            proxy_pass http://voice_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
    }

    # HTTPS server (production configuration)
    server {
        # Uncomment for production with SSL certificates
        # listen 443 ssl http2;
        # listen [::]:443 ssl http2;

        # Comment this line in production
        listen 443;

        server_name _;

        # SSL certificate paths (Let's Encrypt)
        # ssl_certificate /etc/nginx/ssl/fullchain.pem;
        # ssl_certificate_key /etc/nginx/ssl/privkey.pem;

        # SSL configuration (Mozilla Intermediate)
        # ssl_protocols TLSv1.2 TLSv1.3;
        # ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        # ssl_prefer_server_ciphers off;

        # SSL session cache
        # ssl_session_cache shared:SSL:10m;
        # ssl_session_timeout 10m;

        # OCSP stapling
        # ssl_stapling on;
        # ssl_stapling_verify on;
        # ssl_trusted_certificate /etc/nginx/ssl/chain.pem;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

        # Uncomment for production with HTTPS
        # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Maximum upload size
        client_max_body_size 10M;

        # Health check endpoint (no rate limiting)
        location /health {
            proxy_pass http://voice_app/health;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            access_log off;
        }

        # Twilio webhooks (rate limited)
        location /webhooks {
            # Apply rate limiting
            limit_req zone=webhook_limit burst=5 nodelay;
            limit_conn conn_limit 10;

            proxy_pass http://voice_app/webhooks;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # Timeouts for webhooks
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # API endpoints (rate limited)
        location /api {
            # Apply rate limiting
            limit_req zone=api_limit burst=20 nodelay;
            limit_conn conn_limit 10;

            proxy_pass http://voice_app/api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # Timeouts for API
            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # WebSocket endpoint (no rate limiting, but connection limit)
        location /ws {
            limit_conn conn_limit 100;

            proxy_pass http://websocket_app;
            proxy_http_version 1.1;

            # WebSocket specific headers
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket timeouts (keep connections alive)
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;

            # Disable buffering for WebSocket
            proxy_buffering off;
        }

        # Static files (optional, if serving any)
        location /static {
            alias /usr/share/nginx/html;
            expires 30d;
            add_header Cache-Control "public, immutable";
        }

        # Default location - proxy to app
        location / {
            proxy_pass http://voice_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
    }
}
